# PRS On-Premises Prometheus Configuration
# Adapted from EC2 setup for on-premises monitoring
# Optimized for 16GB RAM and extended retention

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    environment: 'onprem-production'
    datacenter: 'client-datacenter'
    instance: 'prs-onprem'

# Rule files
rule_files:
  - "rules/*.yml"

# Alerting configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'prs-onprem-server'

  # PRS Backend API metrics
  - job_name: 'prs-backend'
    static_configs:
      - targets: ['backend:4000']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'prs-backend'

  # PostgreSQL metrics (via postgres_exporter)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'postgresql'

  # Redis metrics (via redis_exporter)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'redis'

  # Nginx metrics (via nginx-prometheus-exporter)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'nginx'

  # Docker container metrics (via cAdvisor)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'docker'

  # TimescaleDB specific metrics
  - job_name: 'timescaledb'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 60s
    metrics_path: /metrics
    params:
      target: ['postgres:5432']
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'timescaledb'

  # Custom application health checks
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'backend:4000'
        - 'frontend:80'
        - 'postgres:5432'
        - 'redis:6379'
    metrics_path: '/health'
    scrape_interval: 60s
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.+):(.+)'
        target_label: service
        replacement: '${1}'
      - source_labels: [__address__]
        regex: '(.+):(.+)'
        target_label: port
        replacement: '${2}'

# Storage configuration for on-premises
storage:
  tsdb:
    path: /prometheus
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true
    
# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "http://prometheus-remote-storage:9201/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Remote read configuration (optional)
# remote_read:
#   - url: "http://prometheus-remote-storage:9201/read"
